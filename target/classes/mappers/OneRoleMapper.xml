<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.one.system.mapper.OneRoleMapper">
  <resultMap id="BaseResultMap" type="org.one.system.entity.OneRole">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="createid" jdbcType="BIGINT" property="createid" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="updateid" jdbcType="BIGINT" property="updateid" />
    <result column="updatetime" jdbcType="TIMESTAMP" property="updatetime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, remark, status, createid, createtime, updateid, updatetime
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from one_role
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from one_role
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="org.one.system.entity.OneRole" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
    insert into one_role (id, name, remark, 
      status, createid, createtime, 
      updateid, updatetime)
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{createid,jdbcType=BIGINT}, #{createtime,jdbcType=TIMESTAMP}, 
      #{updateid,jdbcType=BIGINT}, #{updatetime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="org.one.system.entity.OneRole" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
    insert into one_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createid != null">
        createid,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="updateid != null">
        updateid,
      </if>
      <if test="updatetime != null">
        updatetime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createid != null">
        #{createid,jdbcType=BIGINT},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateid != null">
        #{updateid,jdbcType=BIGINT},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.one.system.entity.OneRole">
    update one_role
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createid != null">
        createid = #{createid,jdbcType=BIGINT},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateid != null">
        updateid = #{updateid,jdbcType=BIGINT},
      </if>
      <if test="updatetime != null">
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.one.system.entity.OneRole">
    update one_role
    set name = #{name,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      createid = #{createid,jdbcType=BIGINT},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      updateid = #{updateid,jdbcType=BIGINT},
      updatetime = #{updatetime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <select id="findRolesByPage" parameterType="org.one.system.entity.OneRole" resultType="org.one.system.entity.OneRole">
  	SELECT
		orl.id, orl.name, orl.remark, orl.status, orl.createid, orl.createtime, orl.updateid, orl.updatetime, GROUP_CONCAT(om.name) AS menunames
	FROM
		one_role orl
	LEFT JOIN one_role_menu orm ON orl.id = orm.roleid
	LEFT JOIN one_menu om ON orm.menuid = om.id
  	WHERE orl.status != 0
  	<if test="name != null and name != ''">
   		AND orl.name like concat('%', #{name}, '%')
   	</if>
   	<if test="remark != null and remark != ''">
   		AND orl.remark like concat('%', #{remark}, '%')
   	</if>
   	<if test="status != null and status != ''">
   		AND orl.status = #{status}
   	</if>
   	GROUP BY
		orl.id
	<if test="menunames != null and menunames != ''">
   		HAVING menunames like concat('%', #{menunames}, '%')
   	</if>
	ORDER BY orl.createtime DESC
  </select>
  
  <select id="countByItem" resultType="java.lang.Integer">
		select count(1) from one_role 
		where ${item} = #{itemValue}
		<if test="roleid != null">
			and id != #{roleid}
		</if>
  </select>
</mapper>